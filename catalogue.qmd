# Existing courses and trainee programmes

```{r, echo=FALSE}
directory = "data/lehrangebote"
```

```{r, echo=FALSE}
# run only one time, to build JSON data entries from ods compilation
source(file = "source/IANUS_prepareODS.R")
LV <- IANUS_prepareOds("data/IANUS-LV_alle.ods")

# Create (update) JSON files with IANUS data from spreadsheet (.ods)
if (!dir.exists(directory))
{
  file.remove(directory)
}

source(file = "source/IANUS_toJSON.R")
IANUS_toJSON(LV, directory = directory, order.by = "Stadt")
```

```{r, echo=FALSE}
# Load IANUS data from JSON files
source(file = "source/IANUS_loadJSONs.R")

ianus <- IANUS_loadJSONs(directory = directory)
```

```{r, echo=FALSE}
# Add extra variables with processed keywords and DLM tags
# identify all content keywords
source(file = "source/IANUS_catchKeywords.R")
ianus$Keywords <- IANUS_catchKeywords(ianus)

keywords_unique <- unique(unlist(ianus$Keywords))

# assign DLM tags according to keywords
source(file = "source/IANUS_buildDLM.R")
ianus$DLM <- IANUS_buildDLM(ianus$Keywords)
```


```{r, echo=FALSE}
RDM_keywords <- c("Digitale Datenauswertung", "Digitale Dokumentation", "Datenbanken", 
                  "Datenmanagement", "Metadaten", "Archivierung", "Datenkuratierung",
                  "Online-Ressourcen", "Internet", "Webtechnologien", "Web-Kartierung", "Ausgrabungsdokumentation")
```

```{r, echo=FALSE}
ianus_toDisplay <- ianus[, c(
  "Einrichtung","Veranstaltungstitel", "Semester" 
  #"Veranstaltungstyp", "Zielgruppe", 
  #"Stadt", "Institut", "Studiengang/Modul",
  #"Lehrende", "Notiz",
  #"Nachname", "Vorname", "Position"
  )]

badge_series <- function(x, type) {
  # for reference:
  badgeThemeClasses <- paste0("badge bg-", c("primary", "secondary",
                                            "success", "danger", "warning", "info", "dark"))
  keywordClasses <- c("Content-RDM", "Content-nonRDM",
                     "DLM-Datacreation", "DLM-Datadestruction", "DLM-Dataprocessingandstorage", "DLM-Datausage", "DLM-Dataarchiving")
  
  if (!is.na(x[1])) {
    badgeClass = type
    if (type == 'DLM') {
      badgeClass = paste0(type, "-", gsub(" ", "", x))
    }
    else if (type == 'Content') {
      badgeClass = paste0(type, "-", ifelse(x %in% RDM_keywords, "RDM", "nonRDM"))
    }
    prefix <- paste0('<span class="', badgeThemeClasses[match(badgeClass, keywordClasses)], '">')
    return(paste(prefix, x, '</span>', collapse = '<br>'))
  } else {
    return('')
  }
}

ianus_toDisplay$Keywords <- sapply(ianus$Keywords, badge_series, type = 'Content')

ianus_toDisplay$DLM <- sapply(ianus$DLM, badge_series, type = 'DLM')

linkToJSON <- paste0("https://gitlab.rlp.net/n4o/competence_framework/-/tree/main/", directory, "/", ianus$Stadt, "/", ianus$id, ".json")

ianus_toDisplay$Veranstaltungstitel <- paste0("<a href=\"", linkToJSON, "\">", ianus_toDisplay$Veranstaltungstitel, "</a>")

columnDisplayNames <- c('Institution<br><em>Einrichtung</em>', "Title<br><em>Veranstaltungstitel</em>", "Semester", 'Content keywords<br><em>Inhalt</em>', 'Data Lifecycle<br>Management')
```

```{r, echo=FALSE}
library(DT)

options(DT.options = list(
  pageLength = 10, 
  language = list(search = 'Search:'), 
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#3A86FF'});",
    "}"
  )))

DT::datatable(ianus_toDisplay, 
              rownames = FALSE, 
              escape = FALSE, 
              colnames = columnDisplayNames, 
              options = list(list(width = '150px', targets = 1:ncol(ianus_toDisplay))))
```

## Notes

Content keywords included in the IANUS database that we consider directly relevant to RDM competency:

```{r, echo=FALSE}
cat(paste('-', RDM_keywords), sep = '\n')
```

## Data sources

- @ianus
- @schmidt_scschmidtarchit-lv_analysis_2024
