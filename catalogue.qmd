# Catalogue of existing courses and trainee programmes

```{r, echo=FALSE}
directory = "data/lehrangebote"
```

```{r, echo=FALSE}
# run only one time, to build JSON data entries from ods compilation
source(file = "source/IANUS_prepareODS.R")
LV <- IANUS_prepareOds("data/IANUS-LV_alle.ods")

# Create (update) JSON files with IANUS data from spreadsheet (.ods)
if (!dir.exists(directory))
{
  file.remove(directory)
}

source(file = "source/IANUS_toJSON.R")
IANUS_toJSON(LV, directory = directory, order.by = "Stadt")
```

```{r, echo=FALSE}
# Load IANUS data from JSON files
source(file = "source/IANUS_loadJSONs.R")

ianus <- IANUS_loadJSONs(directory = directory)
```

```{r, echo=FALSE}
# Add extra variables with processed keywords and DLM tags
# identify all content keywords
source(file = "source/IANUS_catchKeywords.R")
ianus$Keywords <- IANUS_catchKeywords(ianus)

keywords_unique <- unique(unlist(ianus$Keywords))

# assign DLM tags according to keywords
source(file = "source/IANUS_buildDLM.R")
ianus$DLM <- IANUS_buildDLM(ianus$Keywords)
```

```{r, echo=FALSE}
ianus_toDisplay <- ianus[, c(
  "Einrichtung","Veranstaltungstitel", "Semester" 
  #"Veranstaltungstyp", "Zielgruppe", 
  #"Stadt", "Institut", "Studiengang/Modul",
  #"Lehrende", "Notiz",
  #"Nachname", "Vorname", "Position"
  )]

badge_series <- function(x, type = 'badgeDefault') {
  if (!is.na(x[1])) {
    modType = type
    if (type == 'badgeDLM') {
      modType = gsub(" ", "", x)
    }
    prefix <- paste0('<span class="badge" id="', modType, '">')
    return(paste(prefix, x, '</span>', collapse = '&nbsp;'))
  } else {
    return('')
  }
}

ianus_toDisplay$Keywords <- sapply(ianus$Keywords, badge_series)

ianus_toDisplay$DLM <- sapply(ianus$DLM, badge_series, type = 'badgeDLM')

linkToJSON <- paste0("https://gitlab.rlp.net/n4o/competence_framework/-/tree/main/", directory, "/", ianus$Stadt, "/", ianus$id, ".json")

ianus_toDisplay$Veranstaltungstitel <- paste0("<a href=\"", linkToJSON, "\">", ianus_toDisplay$Veranstaltungstitel, "</a>")
```

```{r, echo=FALSE}
library(DT)

options(DT.options = list(
  pageLength = 10, 
  language = list(search = 'Search by Last update, Contributors, Title or keyword:'), 
  initComplete = DT::JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#03989e'});",
    "}"
  )))

DT::datatable(ianus_toDisplay)
```

## Data sources

- @ianus
- @schmidt_scschmidtarchit-lv_analysis_2024
