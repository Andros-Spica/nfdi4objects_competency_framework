# Analysis

```{r, echo=FALSE}
directory = "data/lehrangebote"
```

```{r}
library(wordcloud)
```

```{r, echo=FALSE}
# Load IANUS data from JSON files
source(file = "source/IANUS_loadJSONs.R")

ianus <- IANUS_loadJSONs(directory = directory)
```

```{r, echo=FALSE}
# format semester variable
semester_name_in_order <- c(
  "WiSe 2014/15","SoSe 2015", "WiSe 2015/16", "SoSe 2016", "WiSe 2016/17", 
  "SoSe 2017", "WiSe 2017/18", "SoSe 2018","WiSe 2018/19", "SoSe 2019", 
  "WiSe 2019/20", "SoSe 2020", "WiSe 2020/21", "SoSe 2021", "WiSe 2021/22", 
  "SoSe 2022", "WiSe 2022/23", "SoSe 2023")

ianus$Semester <- factor(ianus$Semester, levels = semester_name_in_order, ordered = TRUE)

# format name of organisation/centre
ianus$Einrichtung <- gsub("\n", "", ianus$Einrichtung)

# Group all associated to Humboldt-Universität zu Berlin
ianus$Einrichtung <- gsub("Humboldt Universität Berlin,Berlin-Brandenburgische Akademie der Wissenschaften",
                          "Humboldt-Universität zu Berlin",
                          ianus$Einrichtung)
ianus$Einrichtung <- gsub("Humboldt-Universität zu Berlin und Berlin-Brandenburgische Akademie der Wissenschaften",
                          "Humboldt-Universität zu Berlin",
                          ianus$Einrichtung)
ianus$Einrichtung <- gsub("Humboldt Universität Berlin, Ägyptisches Museum",
                          "Humboldt-Universität zu Berlin",
                          ianus$Einrichtung)
ianus$Einrichtung <- gsub("Humboldt Universität Berlin",
                          "Humboldt-Universität zu Berlin",
                          ianus$Einrichtung)
```

IANUS lehrangebote dataset (2014-2023, n=`{r} nrow(ianus)`):

```{r, echo=FALSE, fig.height=9, fig.width=7}
centre_freq_sorted <- sort(table(factor(ianus$Einrichtung)), decreasing = FALSE)

par(mar = c(0, 15, 0, 2) + 0.2, cex.axis = 0.7)

barplot(centre_freq_sorted, 
    las = 2,
    horiz = TRUE,
    xaxt = "n",
    space = 0
    )

x_pos = ifelse(centre_freq_sorted > 100, centre_freq_sorted - 2, centre_freq_sorted + 8)

text(x_pos, seq(0.5, nrow(centre_freq_sorted) + 0.5, by = 1),
     adj = 1,
     labels = paste(centre_freq_sorted),
     cex = 0.65)
```

```{r, echo=FALSE}
plot(ianus$Semester, ylab = "Frequency")
```

```{r, echo=FALSE}
# Add extra variables with processed keywords and DLM tags
# identify all content keywords
source(file = "source/IANUS_catchKeywords.R")
ianus$Keywords <- IANUS_catchKeywords(ianus)

keywords_unique <- unique(unlist(ianus$Keywords))

# assign DLM tags according to keywords
source(file = "source/IANUS_buildDLM.R")
ianus$DLM <- IANUS_buildDLM(ianus$Keywords)
```
  
```{r, echo=FALSE}
keywords_unlisted <- unlist(ianus$Keywords)
keywords_unlisted <- keywords_unlisted[keywords_unlisted != "NA"]
keyword_freq_sorted <- sort(table(keywords_unlisted), decreasing = TRUE)
```

```{r, echo=FALSE}
RDM_keywords <- c("Digitale Datenauswertung", "Digitale Dokumentation", "Datenbanken", 
                  "Datenmanagement", "Metadaten", "Archivierung", "Datenkuratierung",
                  "Online-Ressourcen", "Internet", "Webtechnologien", "Web-Kartierung", "Ausgrabungsdokumentation")

is_RDM <- names(keyword_freq_sorted) %in% RDM_keywords
```

```{r, echo=FALSE, fig.cap='Content keywords frequency'}
cutThreshold = length(keyword_freq_sorted) # no cutting
keyword_top <- keyword_freq_sorted[1:cutThreshold]
keyword_top_RDM <- is_RDM[1:cutThreshold]

colorSet <- c("lightblue","darkred")

par(mar = c(7, 4, 2, 2) + 0.2, cex.axis = 0.7)

barplot(keyword_top, 
        las = 2,
        col = colorSet[keyword_top_RDM + 1], 
        main ="Most frequent keywords (Inhalte)",
        ylab = "Frequency",
        xaxt="n", space = 1)

legend(length(keyword_top) * 0.8, max(keyword_top) * 0.8, legend = c("Non-RDM keyword", "RDM keyword"), fill = colorSet)

end_point = 0.5 + nrow(keyword_top) + nrow(keyword_top) - 1

text(seq(1.5, end_point, by = 2), par("usr")[3]-0.25, 
     srt = 60, adj = 1, xpd = TRUE,
     labels = paste(names(keyword_top)), cex = 0.65)
```

```{r, echo=FALSE, fig.height=6, fig.width=6, fig.cap='Wordcloud: all content keywords'}
set.seed(123)

par(mar = rep(0, 4))
wordcloud(words = names(keyword_freq_sorted), freq = keyword_freq_sorted, min.freq = 1,
          max.words=200, random.order=FALSE, rot.per=0.35, 
          scale = c(3, .3),
          colors=brewer.pal(8, "Set1"))
```

```{r, echo=FALSE, fig.cap='Content keywords frequency'}
cutThreshold = length(keyword_freq_sorted[is_RDM]) # no cutting
RDMkeywords_top <- (keyword_freq_sorted[is_RDM])[1:cutThreshold]

par(mar = c(7, 4, 2, 2) + 0.2, cex.axis = 0.7)

barplot(RDMkeywords_top, 
        las = 2,
        main ="Most frequent keywords (Inhalte)\nrelated to RDM",
        ylab = "Frequency",
        xaxt="n", space = 1)

end_point = 0.5 + nrow(RDMkeywords_top) + nrow(RDMkeywords_top) - 1

text(seq(1.5, end_point, by = 2), par("usr")[3]-0.25, 
     srt = 60, adj = 1, xpd = TRUE,
     labels = paste(names(RDMkeywords_top)), cex = 0.65)
```

```{r, echo=FALSE, fig.height=6, fig.width=6, fig.cap='Wordcloud: RDM content keywords'}
set.seed(7)

par(mar = rep(0, 4))
wordcloud(words = names(keyword_freq_sorted)[is_RDM], freq = keyword_freq_sorted[is_RDM], min.freq = 1,
          max.words=200, random.order=FALSE, rot.per=0.35, 
          scale = c(2, .3),
          colors=brewer.pal(8, "Set1"))
```


## Notes

Content keywords included in the IANUS database that we consider directly relevant to RDM competency:

```{r, echo=FALSE}
cat(paste('-', RDM_keywords), sep = '\n')
```
